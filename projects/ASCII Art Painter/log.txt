1-Pillow.Image:
    Image将图片格式文件转化成一个高度封装的对象
    其涉及的操作可以是转换灰度/RGB，获取规格等等
    存在更多图形应用的可能

==

2-全局平均灰度：
    因为人的视觉本质是比较亮度
    所以比起单纯映射ascii表到灰度值0-255，先取整张图片的平均灰度，然后以其为基准划分出剩下的区间，再将其映射到ascii表
    这样操作从视觉观感上有很大提升

==

3-numpy矩阵与直接操作数组：
    numpy允许了对矩阵的矢量化操作
    可以非常精简的代码实现全局增删改
    更重要的是极大地简化了切片操作，以及广播机制

==

4-argparse使用规范：
    应同时给予参数缩写和全写选项
    应尽量指明参数类型
    若参数名称与变量不同，应声明dest
    当同时声明简写选项和长选项时，默认的变量名会与长选项对应

==

5-灰阶级数大小的影响：
    理论上讲高级数可以带来更鲜明的亮度对比，画面质感也就会更丰富
    但意想不到的是，灰阶级数70的ascii映射表在不同分辨率和色彩丰富的原图片输入下，表现出来的效果完全不如10级表，有些地方甚至有明显的失真
    即使是在高分辨率的情况下也一样，推测的原因是字符本身形状的局限性
    因为灰度总共只有0-255，如果采用70级表，则平均每三度就会变一个字符，然后三个灰度在人眼看来的变化远小于字符本身的差异，故才造成了如此大的视觉效果差别
    人眼在通常的室内环境中观察图象监视器屏幕时,人眼对黑白灰度级的分辨力与对三基色灰度级的分辨力没有显著差异
    在所表示的图象灰度显示系统中,灰度级数为8、16、32时的人眼正确识别率分别约为93.16%、68.75%、45.31%

==

6-os
    os允许了程序模拟系统操作，包括但不限于获取当前地址，列出当前目录下的所有文件等等

==

7-subprocess
    允许了多线程执行命令，传参形式等同于shell

==

8-单元区块比例
    经大量测试，单元区块比例最好不要固定为1080p比例，